openapi: 3.0.0
info:
  description: |
    Zar.cloud backend API
  version: "0.1.0"
  title: API.ZAR.CLOUD
  contact:
    email: anton.nell@zar.network
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://api.zar.cloud/api/v1'
security:
  - BasicAuth: []
paths:
  /login:
    post:
      tags:
        - Authentication
      summary: Log in to the zar.cloud network
      operationId: login
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '204':
          description: Invalid Credentials
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/Login'
  /register:
    post:
      tags:
        - Authentication
      summary: Register for a new zar.cloud account
      operationId: register
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/Register'
  /getAccounts:
    post:
      security:
        - AccessToken: []
          Key: []
          BasicAuth: []
      tags:
      - Accounts
      summary: Get Zar Network accounts
      operationId: getAccounts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
  /createAccount:
    post:
      security:
        - AccessToken: []
          Key: []
          BasicAuth: []
      tags:
      - Accounts
      summary: Create a Zar Network accounts
      operationId: createAccount
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/CreateAccount'
  /getAssets:
    post:
      security:
        - AccessToken: []
          Key: []
          BasicAuth: []
      tags:
      - Assets
      summary: Get all assets supported by zar.cloud
      operationId: getAssets
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
  /issueAsset:
    post:
      security:
        - AccessToken: []
          Key: []
          BasicAuth: []
      tags:
      - Assets
      summary: Issue a new asset on the Zar Network
      operationId: issueAsset
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/IssueAsset'
  /mintAsset:
    post:
      security:
        - AccessToken: []
          Key: []
          BasicAuth: []
      tags:
      - Assets
      summary: Mint asset on the Zar Network
      operationId: mintAsset
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/MintAsset'
  /burnAsset:
    post:
      security:
        - AccessToken: []
          Key: []
          BasicAuth: []
      tags:
      - Assets
      summary: Burn asset on the Zar Network
      operationId: burnAsset
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/BurnAsset'
  /uploadAssetImage:
    post:
      security:
        - AccessToken: []
          Key: []
          BasicAuth: []
      tags:
      - Assets
      summary: Upload an image for an asset on Zar Network
      operationId: uploadAssetImage
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/UploadAssetImage'
  /getBankAccounts:
    post:
      security:
        - AccessToken: []
          Key: []
          BasicAuth: []
      tags:
      - Banks
      summary: Get your loaded bank accounts
      operationId: getBankAccounts
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
  /createBankAccount:
    post:
      security:
        - AccessToken: []
          Key: []
          BasicAuth: []
      tags:
      - Banks
      summary: Get Zar Network beneficiaries
      operationId: createBankAccount
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/CreateBankAccount'
  /getBanks:
    post:
      security:
        - AccessToken: []
          Key: []
          BasicAuth: []
      tags:
      - Banks
      summary: Get supported banks
      operationId: getBanks
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
  /getBankAccountTypes:
    post:
      security:
        - AccessToken: []
          Key: []
          BasicAuth: []
      tags:
      - Banks
      summary: Get supported bank account types
      operationId: getBankAccountTypes
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
  /getBeneficiaries:
    post:
      security:
        - AccessToken: []
          Key: []
          BasicAuth: []
      tags:
      - Beneficiaries
      summary: Get Zar Network beneficiaries
      operationId: getBeneficiaries
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
  /createBeneficiary:
    post:
      security:
        - AccessToken: []
          Key: []
          BasicAuth: []
      tags:
      - Beneficiaries
      summary: Create a Zar Network beneficiary
      operationId: createBeneficiary
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/CreateBeneficiary'
  /requestOTP:
    post:
      security:
        - AccessToken: []
          Key: []
          BasicAuth: []
      tags:
      - OTP
      summary: Send an OTP to the user's mobile number
      operationId: requestOTP
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
  /verifyOTP:
    post:
      security:
        - AccessToken: []
          Key: []
          BasicAuth: []
      tags:
      - OTP
      summary: Verify the OTP and user combination
      operationId: verifyOTP
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/VerifyOTP'
  /pay:
    post:
      tags:
        - Payments
      summary: Make a payment to a zar account
      operationId: pay
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/Pay'
  /requestDeposit:
    post:
      tags:
        - Payments
      summary: Request a deposit reference
      operationId: requestDeposit
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/RequestDeposit'
  /withdraw:
    post:
      tags:
        - Payments
      summary: Make a payment withdrawal to your bank account
      operationId: withdraw
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/Withdraw'
  /getTransactions:
    post:
      tags:
        - Payments
      summary: Get the transactions created on the zar.cloud app
      operationId: getTransactions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
  /resetPassword:
    post:
      tags:
        - Users
      summary: Request a reset of the password for your zar.cloud account
      operationId: resetPassword
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/ResetPassword'
  /verifyResetPassword:
    post:
      tags:
        - Users
      summary: Verify the OTP for our password reset request
      operationId: verifyResetPassword
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/VerifyResetPassword'
  /setPassword:
    post:
      tags:
        - Users
      summary: Set a new password for your zar.cloud account
      operationId: setPassword
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/SetPassword'
  /setPin:
    post:
      security:
        - AccessToken: []
          Key: []
          BasicAuth: []
      tags:
      - Users
      summary: Sets the user's pin
      operationId: setPin
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/SetPin'
  /updateName:
    post:
      security:
        - AccessToken: []
          Key: []
          BasicAuth: []
      tags:
      - Users
      summary: Update the user's name
      operationId: updateName
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Payload
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/UpdateName'
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    AccessToken:
      type: apiKey
      in: header
      name: x-access-token
    Key:
      type: apiKey
      in: header
      name: x-key
  schemas:
    Login:
      type: object
      required:
        - email_address
          password
      properties:
        email_address:
          type: string
          example: name@domain.com
        password:
          type: string
          example: example_password
    Register:
      type: object
      required:
        - email_address
          mobile_number
          firstname
          lastname
          password
      properties:
        email_address:
          type: string
          example: name@domain.com
        mobile_number:
          type: string
          example: "+27821234567"
        firstname:
          type: string
          example: John
        lastname:
          type: string
          example: Doe
        password:
          type: string
          example: example_password
    ResetPassword:
      type: object
      required:
        - email_address
        - mobile_number
      properties:
        email_address:
          type: string
          example: name@domain.com
        mobile_number:
          type: string
          example: "+27821234567"
    VerifyResetPassword:
      type: object
      required:
        - email_address
        - mobile_number
      properties:
        email_address:
          type: string
          example: name@domain.com
        mobile_number:
          type: string
          example: "+27821234657"
        pin:
          type: string
          example: 123456
    SetPassword:
      type: object
      required:
        - validation_uuid
          new_password
      properties:
        new_password:
          type: string
          example: new_password
        validation_uuid:
          type: string
          example: "xxxxxx-xxxxxx-xxxxxxxxx-xxxxxxx-xxxx"
    CreateAccount:
      type: object
      required:
        - name
          account_type
      properties:
        name:
          type: string
          example: "Account Name"
        account_type:
          type: string
          enum: ['ZAR']
    IssueAsset:
      type: object
      required:
        - symbol
          name
          total_supply
          minting_address
      properties:
        name:
          type: string
          example: "New Token"
        symbol:
          type: string
          example: "TOK"
        total_supply:
          type: integer
          example: 100000000
        minting_address:
          type: string
          example: "zar123..."
        mintable:
          type: boolean
        owner_burnable:
          type: boolean
        holder_burnable:
          type: boolean
        from_burnable:
          type: boolean
        freezable:
          type: boolean
    MintAsset:
      type: object
      required:
        - asset_uuid
          amount
        - address
        - beneficiary_uuid
        - own_account_uuid
      properties:
        asset_uuid:
          type: string
          example: "xxxxxx-xxxxxx-xxxxxxxxx-xxxxxxx-xxxx"
        amount:
          type: integer
          example: 123
        address:
          type: integer
          example: "zar123..."
        beneficiary_uuid:
          type: integer
          example: "xxxxxx-xxxxxx-xxxxxxxxx-xxxxxxx-xxxx"
        own_account_uuid:
          type: integer
          example: "xxxxxx-xxxxxx-xxxxxxxxx-xxxxxxx-xxxx"
    BurnAsset:
      type: object
      required:
        - asset_uuid
          amount
      properties:
        asset_uuid:
          type: string
          example: "xxxxxx-xxxxxx-xxxxxxxxx-xxxxxxx-xxxx"
        amount:
          type: integer
          example: 123
    UploadAssetImage:
      type: object
      required:
        - asset_uuid
          amount
      properties:
        asset_uuid:
          type: string
          example: "xxxxxx-xxxxxx-xxxxxxxxx-xxxxxxx-xxxx"
        image_data:
          type: string
          example: "BASE64....."
        image_extension:
          type: string
          example: PNG
    CreateBeneficiary:
      type: object
      required:
        - name
          reference
        - mobile_number
        - email_address
        - account_address
      properties:
        name:
          type: string
          example: "John Doe"
        reference:
          type: string
          example: "Ref"
        mobile_number:
          type: string
          example: "+27821234567"
        email_address:
          type: string
          example: "name@domain.com"
        account_address:
          type: string
          example: "zar123..."
    VerifyOTP:
      type: object
      required:
        - pin
      properties:
        pin:
          type: integer
          example: 123456
    SetPin:
      type: object
      required:
        - pin
      properties:
        pin:
          type: integer
          example: 123456
    UpdateName:
      type: object
      required:
        - firstname
          lastname
      properties:
        firstname:
          type: string
          example: John
        lastname:
          type: string
          example: Doe
    Pay:
      type: object
      required:
        - beneficiary_uuid
        - own_account_uuid
        - to_address
          account_uuid
          amount
          reference
          asset_id
      properties:
        account_uuid:
          type: string
          example: "xxxxxx-xxxxxx-xxxxxxxxx-xxxxxxx-xxxx"
        amount:
          type: integer
          example: 1000.00
        reference:
          type: string
          example: "Reference"
        asset_id:
          type: string
          example: 'coin19282'
        beneficiary_uuid:
          type: string
          example: 'xxxxxx-xxxxxx-xxxxxxxxx-xxxxxxx-xxxx'
        own_account_uuid:
          type: string
          example: 'xxxxxx-xxxxxx-xxxxxxxxx-xxxxxxx-xxxx'
        to_address:
          type: string
          example: "zar123..."
    RequestDeposit:
      type: object
      required:
        - amount
      properties:
        amount:
          type: integer
          example: 1000.00
    Withdraw:
      type: object
      required:
        - bank_account_uuid
          amount
          reference
      properties:
        bank_account_uuid:
          type: string
          example: "xxxxxx-xxxxxx-xxxxxxxxx-xxxxxxx-xxxx"
        amount:
          type: integer
          example: 1000.00
        reference:
          type: string
          example: "Reference"
    CreateBankAccount:
      type: object
      required:
        - bank_uuid
          account_type_uuid
          name
          full_name
          account_number
      properties:
        bank_uuid:
          type: string
          example: "xxxxxx-xxxxxx-xxxxxxxxx-xxxxxxx-xxxx"
        account_type_uuid:
          type: string
          example: "xxxxxx-xxxxxx-xxxxxxxxx-xxxxxxx-xxxx"
        name:
          type: string
          example: "MY RMB Account"
        full_name:
          type: string
          example: "Mr John Doe"
        account_number:
          type: string
          example: "0123456789"
    ApiResponse:
      type: object
      properties:
        status:
          type: integer
          format: int32
        success:
          type: boolean
        result:
          type: object
  requestBodies:
    Login:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Login'
      description: Authentication object containing details to be verified
      required: true
    Register:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Register'
      description: Registration object
      required: true
    ResetPassword:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResetPassword'
      description: Reset Password object
      required: true
    VerifyResetPassword:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VerifyResetPassword'
      description: Verify Reset Password object
      required: true
    SetPassword:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SetPassword'
      description: Set Password object
      required: true
    CreateAccount:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAccount'
      description: Create Account object
      required: true
    IssueAsset:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IssueAsset'
      description: Issue Asset object
      required: true
    BurnAsset:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BurnAsset'
      description: Burn Asset object
      required: true
    MintAsset:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MintAsset'
      description: Mint Asset object
      required: true
    UploadAssetImage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UploadAssetImage'
      description: Upload Asset Image object
      required: true
    CreateBeneficiary:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateBeneficiary'
      description: Upload Asset Image object
      required: true
    VerifyOTP:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VerifyOTP'
      description: Verify OTP object
      required: true
    SetPin:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SetPin'
      description: Set Pin object
      required: true
    UpdateName:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateName'
      description: Update Name object
      required: true
    Pay:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pay'
      description: Pay object
      required: true
    RequestDeposit:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestDeposit'
      description: Request Deposit object
      required: true
    Withdraw:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Withdraw'
      description: Withdraw object
      required: true
    CreateBankAccount:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateBankAccount'
      description: Create Bank Account object
      required: true
